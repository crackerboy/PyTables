name: CI

on: [push, pull_request]

jobs:
  build:

    runs-on: ${{ matrix.os.os }}
    strategy:
      fail-fast: true
      matrix:
        #os: [ ubuntu-latest, macos-latest, windows-latest ]
        #os: [ windows-latest ]
        os:
          #- { os: ubuntu-latest,  shell: bash  }
          #- { os: macos-latest,   shell: bash  }
          - { os: windows-latest, shell: msys2 }

        #python: ['3.6', '3.7', '3.8', '3.9']
        python: ['3.8']

    defaults:
      run:
        shell: '${{ matrix.os.shell }} {0}'

    name: ${{ matrix.os.os }} ${{ matrix.python }} ${{ matrix.name }}
    steps:

    - name: Acquire sources
      uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Install Debian packages
      if: contains(matrix.os.os, 'ubuntu')
      run: |
        sudo apt install libbz2-dev libhdf5-serial-dev liblzo2-dev

    - name: Install Homebrew packages
      if: contains(matrix.os.os, 'macos')
      env:
        # Set brew cleanup period to 10 years.
        HOMEBREW_CLEANUP_PERIODIC_FULL_DAYS: 3650
      run: |
        brew install hdf5

    # https://github.com/msys2/setup-msys2
    - name: Setup msys2
      if: contains(matrix.os.os, 'windows')
      uses: msys2/setup-msys2@v2
      with:
        msystem: MINGW64
        path-type: inherit
        install: >-
          mingw-w64-x86_64-toolchain
          mingw-w64-x86_64-pkg-config
          mingw-w64-x86_64-lapack
          mingw-w64-x86_64-openblas
          mingw-w64-x86_64-hdf5
          mingw-w64-x86_64-python-numpy
          mingw-w64-x86_64-python-numexpr
          mingw-w64-x86_64-cython
          mingw-w64-x86_64-python-pip


    # https://github.com/actions/virtual-environments/issues/1525#issuecomment-735227848
    #- name: Switching shell to msys2
    #  if: contains(matrix.os.os, 'windows')
    #  run: echo "C:/msys64/usr/bin" >> $GITHUB_PATH
    #  shell: bash

    - name: Install Windows packages
      if: false
      #if: contains(matrix.os.os, 'windows')

      # https://github.com/h5py/h5py/blob/master/appveyor.yml
      # https://github.com/h5py/h5py/blob/master/ci/get_hdf5_win.py
      #env:
      #  HDF5_VERSION: 1.12.0
      #  HDF5_VSVERSION: 14
      #  HDF5_DIR: "C:\\hdf5\\%HDF5_VERSION%\\%HDF5_VSVERSION%"
      #run: |
      #  pip install requests
      #  wget https://raw.githubusercontent.com/h5py/h5py/3.1.0/ci/get_hdf5_win.py
      #  python get_hdf5_win.py

      # https://ariya.io/2020/07/on-github-actions-with-msys2
      #shell: msys2 {0}
      # https://packages.msys2.org/base/mingw-w64-hdf5
      # https://packages.msys2.org/base/python-pip
      # TODO: Also install 32-bit variant "mingw-w64-i686-hdf5"?
      run: |

        # Install required packages on msys2.
        pacman --noconfirm -S mingw-w64-x86_64-pkg-config mingw-w64-x86_64-lapack mingw-w64-x86_64-openblas mingw-w64-x86_64-hdf5 mingw-w64-x86_64-python-pip

        # Set environment variable for the subsequent steps.
        #echo 'HDF5_DIR=C:/msys64' >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        python -m pip install --upgrade setuptools pip wheel
        python -m pip install -r requirements.txt
        python -m pip install cython
        # python -m pip install sphinx>=1.1 sphinx_rtd_theme numpydoc ipython

    - name: Install package in development mode
      env:
        # https://github.com/Blosc/bcolz/issues/405
        # https://github.com/PCSX2/pcsx2/issues/2554
        CFLAGS: -mxsave
      run: |
        python setup.py develop

    #- name: Install package
    #  run: |
    #    pip install dist/*.whl

    - name: Run tests
      run: |
        cd .. && python -m tables.tests.test_all
        pt2to3 -h
        ptrepack -h
        ptdump -h
        pttree -h
